{"version":3,"sources":["components/Todos/TodoStats.jsx","redux/todos/todos-actions.js","components/Todos/TodoItem.jsx","components/Todos/TodoList.jsx","components/Todos/TodoList.container.js","components/Todos/TodoEditor.jsx","components/Todos/TodoFilter.jsx","components/Modal/Modal.jsx","components/Todos/Todos.jsx","App.js","redux/todos/todos-reducer.js","redux/store.js","index.js"],"names":["connect","state","total","todos","items","length","completed","reduce","todo","addTodo","createAction","text","payload","id","shortid","generate","deleteTodo","changeFilter","toggleCompleted","TodoItem","onToggleCompleted","onDelete","Checkbox","type","className","checked","onChange","color","inputProps","IconButton","onClick","disabled","aria-label","component","TodoList","onDeleteTodo","map","classNames","getVisibleTodos","allTodos","filter","normalizedFilter","toLowerCase","includes","dispatch","todoActions","TodoEditor","message","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","onCloseModal","alert","window","addEventListener","this","handleKeyDown","removeEventListener","TextField","label","multiline","rows","variant","Button","Component","todosActions","target","reusedModalRoot","document","querySelector","Modal","code","onClose","handleBackdropClick","createPortal","children","Todos","showModal","toggleModal","App","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","todosPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","todosReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","getElementById"],"mappings":"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","file":"static/js/main.bf0225d9.chunk.js","sourcesContent":["import { connect } from 'react-redux';\nimport React from 'react';\n\nconst Stats = ({ total, completed }) => {\n  return (\n    <div>\n      <p>\n        <span>Total: {total}</span>\n      </p>\n      <p>\n        <span>Completed: {completed}</span>\n      </p>\n    </div>\n  );\n};\n\nconst getCompletedCount = todos =>\n  todos.reduce((total, todo) => (todo.completed ? total + 1 : total), 0);\n\nconst mapStateToProps = state => ({\n  total: state.todos.items.length,\n  completed: getCompletedCount(state.todos.items),\n});\n\nexport default connect(mapStateToProps)(Stats);\n","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addTodo = createAction('todos/add', text => ({\n  payload: {\n    id: shortid.generate(),\n    text,\n    completed: false,\n  },\n}));\nconst deleteTodo = createAction('todos/delete');\nconst changeFilter = createAction('todos/changeFilter');\nconst toggleCompleted = createAction('todos/toggleCompleted');\n\nexport default { addTodo, deleteTodo, changeFilter, toggleCompleted }; // eslint-disable-line\n","import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport DeleteTwoToneIcon from '@material-ui/icons/DeleteTwoTone';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './TodosStyles.scss';\n\nconst TodoItem = ({ text, completed, onToggleCompleted, onDelete }) => {\n  return (\n    <>\n      <label>\n        <Checkbox\n          type=\"checkbox\"\n          className=\"TodoList__checkbox\"\n          checked={completed}\n          onChange={onToggleCompleted}\n          color=\"primary\"\n          inputProps={{ 'aria-label': 'secondary checkbox' }}\n        />\n      </label>\n      <p className=\"TodoList__text\">{text}</p>\n      <IconButton\n        type=\"button\"\n        className=\"TodoList__btn\"\n        onClick={onDelete}\n        disabled={!completed}\n        color=\"primary\"\n        aria-label=\"delete todo\"\n        component=\"span\"\n      >\n        <DeleteTwoToneIcon />\n      </IconButton>\n    </>\n  );\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport classNames from 'classnames';\nimport TodoItem from './TodoItem';\nimport './TodosStyles.scss';\n\nconst TodoList = ({ todos, onDeleteTodo, onToggleCompleted }) => {\n  return (\n    <ul className=\"TodoList\">\n      {todos.map(({ id, text, completed }) => {\n        return (\n          <li\n            key={id}\n            className={classNames('TodoList__item', {\n              'TodoList__item--completed': completed,\n            })}\n          >\n            <TodoItem\n              text={text}\n              completed={completed}\n              onToggleCompleted={() => onToggleCompleted(id)}\n              onDelete={() => onDeleteTodo(id)}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import { connect } from 'react-redux';\nimport todoActions from '../../redux/todos/todos-actions';\nimport TodoList from './TodoList';\n\nconst getVisibleTodos = (allTodos, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allTodos.filter(({ text }) =>\n    text.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ todos: { items, filter } }) => ({\n  todos: getVisibleTodos(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteTodo: id => dispatch(todoActions.deleteTodo(id)),\n  onToggleCompleted: id => dispatch(todoActions.toggleCompleted(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport todosActions from '../../redux/todos/todos-actions';\nimport { Button, TextField } from '@material-ui/core';\n\nclass TodoEditor extends Component {\n  state = {\n    message: '',\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleChange = e => {\n    this.setState({ message: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.message !== '') {\n      this.props.onSubmit(this.state.message);\n      this.props.onCloseModal();\n      this.setState({ message: '' });\n      return;\n    }\n\n    alert('Заполни текст Todo');\n  };\n\n  render() {\n    return (\n      <form className=\"TodoEditor\" onSubmit={this.handleSubmit}>\n        <label className=\"TodoEditor__textarea-label\">\n          <TextField\n            className=\"TodoEditor__textarea\"\n            value={this.state.message}\n            onChange={this.handleChange}\n            id=\"outlined-multiline-static\"\n            label=\"Todo text\"\n            multiline\n            rows={2}\n            // defaultValue=\"Default Value\"\n            variant=\"outlined\"\n          />\n        </label>\n        <Button\n          className=\"TodoEditor__btn\"\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          Submit\n        </Button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: text => dispatch(todosActions.addTodo(text)),\n});\n\nexport default connect(null, mapDispatchToProps)(TodoEditor);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport todosActions from '../../redux/todos/todos-actions';\nimport { TextField } from '@material-ui/core';\nimport './TodosStyles.scss';\n\nconst TodoFilter = ({ value, onChange }) => {\n  return (\n    <label className=\"TodoFilter-label\">\n      <TextField\n        type=\"text\"\n        className=\"TodoInput\"\n        value={value}\n        onChange={onChange}\n        id=\"outlined-basic\"\n        label=\"Filter by name\"\n        // variant=\"outlined\"\n      />\n    </label>\n  );\n};\n\nconst mapStateToProps = state => ({\n  value: state.todos.filter,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n  onChange: e => dispatch(todosActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(TodoFilter);\n","// Reused Modal\nimport { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport \"./Modal.scss\";\n\nconst reusedModalRoot = document.querySelector(\"#modal-root\");\n\nexport default class Modal extends Component {\n  // addEventListener keydown\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  // removeEventListener keydown\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  // Close by ESC\n  handleKeyDown = (e) => {\n    e.code === \"Escape\" && this.props.onClose();\n  };\n\n  // Close by Backdrop\n  handleBackdropClick = (e) => {\n    e.currentTarget === e.target && this.props.onClose();\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Modal__backdrop\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal__content\">{this.props.children}</div>\n      </div>,\n      reusedModalRoot\n    );\n  }\n}\n","import { Component } from 'react';\nimport Stats from './TodoStats';\nimport TodoList from './TodoList.container';\nimport TodoEditor from './TodoEditor';\nimport TodoFilter from './TodoFilter';\nimport { Button, IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Modal from '../Modal';\nimport './TodosStyles.scss';\n\nclass Todos extends Component {\n  state = {\n    showModal: false,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { showModal } = this.state;\n\n    return (\n      <>\n        <Stats />\n        <Button\n          className=\"ModaOpen__btn\"\n          onClick={this.toggleModal}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"button\"\n        >\n          + Add Todo\n        </Button>\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <span className=\"ModaClose__btn-wrap\">\n              <IconButton\n                className=\"ModaClose__btn\"\n                onClick={this.toggleModal}\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n              >\n                <CloseIcon />\n              </IconButton>\n            </span>\n            <TodoEditor onCloseModal={this.toggleModal} />\n          </Modal>\n        )}\n\n        <TodoFilter />\n        <TodoList />\n      </>\n    );\n  }\n}\n\nexport default Todos;\n","import React from 'react';\nimport Todos from './components/Todos';\nimport './components/Todos/TodosStyles.scss';\n\nconst App = () => {\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <h1>Todos View Redux</h1>\n        <Todos />\n\n        <ul className=\"UseList\">\n          <li>use React - Prop Types</li>\n          <li>use ESLint</li>\n          <li>use Prettier</li>\n          <li>use gh-pages</li>\n          <li>use Modern normalize</li>\n          <li>use Node Sass</li>\n          <li>use React JSS</li>\n          <li>use Redux</li>\n          <li>use React Redux</li>\n          <li>use Redux Devtools Extension</li>\n          <li>use Material-UI</li>\n          <li>use axios</li>\n          <li>use Classnames</li>\n          <li>use react-router-dom</li>\n          <li>use shortid</li>\n          <li>use Redux Toolkit</li>\n          <li>use Logger for Redux</li>\n          <li>use Redux Persist</li>\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './todos-actions';\n\nconst items = createReducer([], {\n  [actions.addTodo]: (state, { payload }) => [...state, payload],\n  [actions.toggleCompleted]: (state, { payload }) =>\n    state.map(todo =>\n      todo.id === payload ? { ...todo, completed: !todo.completed } : todo,\n    ),\n  [actions.deleteTodo]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ items, filter });\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport todosReducer from './todos/todos-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// localStorage\nconst todosPersistConfig = {\n  key: 'todos',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    todos: persistReducer(todosPersistConfig, todosReducer),\n  },\n  middleware, // logger\n  devTools: process.env.NODE_ENV === 'development', // hide Devtools\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor }; // eslint-disable-line\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={'Loading...'} persistor={store.persistor}>\n        <Router>\n          <App />\n        </Router>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}