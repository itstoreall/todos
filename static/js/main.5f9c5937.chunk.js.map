{"version":3,"sources":["redux/todos/todos-types.js","redux/todos/todos-actions.js","components/Todos/TodoItem.jsx","components/Todos/TodoList.jsx","components/Todos/TodoEditor.jsx","components/Todos/TodoFilter.jsx","components/Modal/Modal.jsx","components/Todos/utils/todos-api.js","components/Todos/Todos.jsx","App.js","redux/todos/todos-reducer.js","redux/store.js","index.js"],"names":["text","type","types","payload","id","shortid","generate","completed","todoId","value","TodoItem","onToggleCompleted","onDelete","Checkbox","className","checked","onChange","color","inputProps","IconButton","onClick","aria-label","component","getVisibleTodos","allTodos","filter","normalizedFilter","toLowerCase","includes","connect","todos","items","dispatch","onDeleteTodo","todoActions","map","cN","TodoEditor","state","message","handleChange","e","setState","currentTarget","handleSubmit","preventDefault","props","onSubmit","handleKeyDown","code","window","addEventListener","this","removeEventListener","TextField","label","multiline","rows","variant","Button","Component","todosActions","target","reusedModalRoot","document","querySelector","Modal","onClose","handleBackdropClick","createPortal","children","newData","fetchTodos","axios","get","then","response","data","addTodo","todo","post","deleteTodo","delete","updateTodo","update","patch","TodosViewRedux","showModal","toggleCompleted","find","todosApi","updatedTodo","calculateCompletedTodo","reduce","total","toggleModal","handleInputChange","inputValue","handleLicenseChange","license","App","Todos","combineReducers","rootReducer","todosReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5f9c5937.chunk.js","sourcesContent":["const ADD = 'todos/add';\nconst DELETE = 'todos/delete';\nconst TOGGLE_COMPLETED = 'todos/toggleCompleted';\nconst CHANGE_FILTER = 'todos/changeFilter';\n\nexport default { ADD, DELETE, TOGGLE_COMPLETED, CHANGE_FILTER }; // eslint-disable-line\n","import shortid from 'shortid';\nimport types from './todos-types';\n\nconst addTodo = (text) => ({\n  type: types.ADD,\n  payload: {\n    id: shortid.generate(),\n    text,\n    completed: false,\n  },\n});\n\nconst deleteTodo = (todoId) => ({\n  type: types.DELETE,\n  payload: todoId,\n});\n\nconst changeFilter = (value) => ({\n  type: types.CHANGE_FILTER,\n  payload: value,\n});\n\nexport default { addTodo, deleteTodo, changeFilter }; // eslint-disable-line\n","import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport DeleteTwoToneIcon from '@material-ui/icons/DeleteTwoTone';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './TodosStyles.scss';\n\nconst TodoItem = ({ text, completed, onToggleCompleted, onDelete }) => {\n  return (\n    <>\n      <label>\n        <Checkbox\n          type=\"checkbox\"\n          className=\"TodoList__checkbox\"\n          checked={completed}\n          onChange={onToggleCompleted}\n          color=\"primary\"\n          inputProps={{ 'aria-label': 'secondary checkbox' }}\n        />\n      </label>\n      <p className=\"TodoList__text\">{text}</p>\n      <IconButton\n        type=\"button\"\n        className=\"TodoList__btn\"\n        onClick={onDelete}\n        // disabled={!completed}\n        color=\"primary\"\n        aria-label=\"delete todo\"\n        component=\"span\"\n      >\n        <DeleteTwoToneIcon />\n      </IconButton>\n    </>\n  );\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport todoActions from '../../redux/todos/todos-actions';\nimport cN from 'classnames';\nimport Todo from './TodoItem';\nimport './TodosStyles.scss';\n\nconst TodoList = ({ todos, onDeleteTodo, onToggleCompleted }) => {\n  return (\n    <ul className=\"TodoList\">\n      {todos.map(({ id, text, completed }) => {\n        return (\n          <li\n            key={id}\n            className={cN('TodoList__item', {\n              'TodoList__item--completed': completed,\n            })}\n          >\n            <Todo\n              // id={id}\n              text={text}\n              completed={completed}\n              onToggleCompleted={() => onToggleCompleted(id)}\n              onDelete={() => onDeleteTodo(id)}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nconst getVisibleTodos = (allTodos, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allTodos.filter(({ text }) =>\n    text.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ todos: { items, filter } }) => ({\n  todos: getVisibleTodos(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteTodo: id => dispatch(todoActions.deleteTodo(id)),\n  onToggleCompleted: () => null,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport todosActions from '../../redux/todos/todos-actions';\nimport { Button, TextField } from '@material-ui/core';\n\nclass TodoEditor extends Component {\n  state = {\n    message: '',\n  };\n\n  // addEventListener keydown\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  // removeEventListener keydown\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  // Input value\n  handleChange = e => {\n    this.setState({ message: e.currentTarget.value });\n  };\n\n  // Submit by Button\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.message);\n    this.setState({ message: '' });\n  };\n\n  // Submit by Enter\n  handleKeyDown = e => {\n    const { message } = this.state;\n    e.code === 'Enter' && message !== '' && this.props.onSubmit(message);\n  };\n\n  render() {\n    return (\n      <form className=\"TodoEditor\" onSubmit={this.handleSubmit}>\n        <label className=\"TodoEditor__textarea-label\">\n          <TextField\n            className=\"TodoEditor__textarea\"\n            value={this.state.message}\n            onChange={this.handleChange}\n            id=\"outlined-multiline-static\"\n            label=\"Todo text\"\n            multiline\n            rows={2}\n            // defaultValue=\"Default Value\"\n            variant=\"outlined\"\n          />\n        </label>\n        <Button\n          className=\"TodoEditor__btn\"\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n        >\n          Submit\n        </Button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: text => dispatch(todosActions.addTodo(text)),\n});\n\nexport default connect(null, mapDispatchToProps)(TodoEditor);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport todosActions from '../../redux/todos/todos-actions';\nimport { TextField } from '@material-ui/core';\nimport './TodosStyles.scss';\n\nconst TodoFilter = ({ value, onChange }) => {\n  return (\n    <label className=\"TodoFilter-label\">\n      <TextField\n        type=\"text\"\n        className=\"TodoInput\"\n        value={value}\n        onChange={onChange}\n        id=\"outlined-basic\"\n        label=\"Filter by name\"\n        // variant=\"outlined\"\n      />\n    </label>\n  );\n};\n\nconst mapStateToProps = state => ({\n  value: state.todos.filter,\n});\n\nconst mapDispatchtoProps = dispatch => ({\n  onChange: e => dispatch(todosActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(TodoFilter);\n","// Reused Modal\nimport { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport \"./Modal.scss\";\n\nconst reusedModalRoot = document.querySelector(\"#modal-root\");\n\nexport default class Modal extends Component {\n  // addEventListener keydown\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  // removeEventListener keydown\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  // Close by ESC\n  handleKeyDown = (e) => {\n    e.code === \"Escape\" && this.props.onClose();\n  };\n\n  // Close by Backdrop\n  handleBackdropClick = (e) => {\n    e.currentTarget === e.target && this.props.onClose();\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Modal__backdrop\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal__content\">{this.props.children}</div>\n      </div>,\n      reusedModalRoot\n    );\n  }\n}\n","import axios from \"axios\";\n\nconst fetchTodos = () => {\n  return axios\n    .get(\"http://localhost:2222/todos\")\n    .then((response) => response.data);\n};\n\nconst addTodo = (todo) => {\n  return axios\n    .post(\"http://localhost:2222/todos\", todo)\n    .then(({ data }) => data);\n};\n\nconst deleteTodo = (todoId) => {\n  return axios.delete(`http://localhost:2222/todos/${todoId}`);\n};\n\nconst updateTodo = (todoId, update) => {\n  return axios\n    .patch(`http://localhost:2222/todos/${todoId}`, update)\n    .then(({ data }) => data);\n};\n\nconst newData = { fetchTodos, addTodo, deleteTodo, updateTodo };\nexport default newData;\n","import { Component } from 'react';\nimport TodoList from './TodoList';\nimport TodoEditor from './TodoEditor';\nimport TodoFilter from './TodoFilter';\nimport { Button, IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Modal from '../Modal';\nimport todosApi from './utils/todos-api';\nimport './TodosStyles.scss';\n\nclass TodosViewRedux extends Component {\n  state = {\n    showModal: false,\n  };\n\n  // Did Mount\n  // componentDidMount() {\n  //   // GET todos\n  //   todosApi\n  //     .fetchTodos()\n  //     .then((todos) => this.setState({ todos }))\n  //     .catch((error) => console.log(error));\n  // }\n\n  // Did Update\n  // componentDidUpdate(prevProps, prevState) {\n  //   const nextTodos = this.state.todos;\n  //   const prevTodos = prevState.todos;\n\n  //   // Сохраняет todos в localStorage после проверки обновления\n  //   nextTodos !== prevTodos &&\n  //     localStorage.setItem('todos', JSON.stringify(nextTodos));\n  // }\n\n  // Toggle Completed (false/true)\n  toggleCompleted = todoId => {\n    const todo = this.state.todos.find(({ id }) => id === todoId);\n    const { completed } = todo;\n    const update = { completed: !completed };\n\n    todosApi.updateTodo(todoId, update).then(updatedTodo => {\n      this.setState(({ todos }) => ({\n        todos: todos.map(todo =>\n          todo.id === updatedTodo.id ? updatedTodo : todo,\n        ),\n      }));\n    });\n  };\n\n  // Total Completed\n  calculateCompletedTodo = () => {\n    const { todos } = this.state;\n\n    return todos.reduce(\n      (total, todo) => (todo.completed ? total + 1 : total),\n      0,\n    );\n  };\n\n  // Toggle Modal\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  // Input Value\n  handleInputChange = e => {\n    this.setState({ inputValue: e.currentTarget.value });\n  };\n\n  // Checked\n  handleLicenseChange = e => {\n    this.setState({ license: e.currentTarget.checked });\n  };\n\n  render() {\n    const { showModal } = this.state;\n    // const TotalTodoCount = todos.length;\n    // const completedTodoCount = this.calculateCompletedTodo();\n\n    return (\n      <>\n        {/* <div>\n          <p>Total: {TotalTodoCount}</p>\n          <p>Completed: {completedTodoCount}</p>\n        </div> */}\n\n        <Button\n          className=\"ModaOpen__btn\"\n          onClick={this.toggleModal}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"button\"\n        >\n          + Add Todo\n        </Button>\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <span className=\"ModaClose__btn-wrap\">\n              <IconButton\n                className=\"ModaClose__btn\"\n                onClick={this.toggleModal}\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n              >\n                <CloseIcon />\n              </IconButton>\n            </span>\n            <TodoEditor />\n          </Modal>\n        )}\n\n        <TodoFilter />\n        <TodoList />\n      </>\n    );\n  }\n}\n\nexport default TodosViewRedux;\n","import React from 'react';\nimport Todos from './components/Todos';\nimport './components/Todos/TodosStyles.scss';\n\nconst App = () => {\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <h1>Todos View Redux</h1>\n        <Todos />\n\n        <ul className=\"UseList\">\n          <li>use React - Prop Types</li>\n          <li>use ESLint</li>\n          <li>use Prettier</li>\n          <li>use gh-pages</li>\n          <li>use Modern normalize</li>\n          <li>use Node Sass</li>\n          <li>use React JSS</li>\n          <li>use Redux</li>\n          <li>use React Redux</li>\n          <li>use Redux Devtools Extension</li>\n          <li>use Material-UI</li>\n          <li>use axios</li>\n          <li>use Classnames</li>\n          <li>use react-router-dom</li>\n          <li>use shortid</li>\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport types from './todos-types';\n\nconst items = (state = [], { type, payload }) => {\n  switch (type) {\n    case types.ADD:\n      return [...state, payload];\n\n    case types.DELETE:\n      return state.filter(({ id }) => id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', { type, payload }) => {\n  switch (type) {\n    case types.CHANGE_FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({ items, filter });\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport todosReducer from './todos/todos-reducer';\n\nconst rootReducer = combineReducers({\n  todos: todosReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}